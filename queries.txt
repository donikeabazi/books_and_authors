
Create 5 books with the following names: C Sharp, Java, Python, PHP, Ruby	
Book.objects.create(title="C Sharp", desc="A book about C Sharp")
Book.objects.create(title="Java", desc="A book about Java")
Book.objects.create(title="Python", desc="A book about Python")
Book.objects.create(title="PHP", desc="A book about PHP")
Book.objects.create(title="Ruby", desc="A book about Ruby")

Query: Create 5 different authors: Jane Austen, Emily Dickinson, Fyodor Dostoevksy, William Shakespeare, Lau Tzu	
Author.objects.create(first_name="Jane", last_name="Austen")
Author.objects.create(first_name="Fyodor", last_name="Dostoevksy")
Author.objects.create(first_name="William", last_name="Shakespeare")
Author.objects.create(first_name="Lau", last_name="Tzu")
Author.objects.create(first_name="Emily", last_name="Dickinson")

Add a new text field in the authors table called 'notes'.	
notes=models.TextField(default="...")

Create and run the migration files to update the table in your database.	

Query: Change the name of the C Sharp book to C#	
csharp = Book.objects.get(title="C Sharp")
csharp.title="C#"
csharp.save()

Query: Change the first name of the 4th author to Bill	
author=Author.objects.get(id=4)
author.first_name="Bill"
author.save()

Query: Assign the first author to the first 2 books	
author=Author.objects.get(id=1)
Book.objects.get(id=1).books.add(author)
Book.objects.get(id=2).books.add(author)

Query: Assign the second author to the first 3 books	
author=Author.objects.get(id=2)
Book.objects.get(id=1).books.add(author)
Book.objects.get(id=2).books.add(author)
Book.objects.get(id=3).books.add(author)

Query: Assign the third author to the first 4 books	
author=Author.objects.get(id=3)
Book.objects.get(id=1).books.add(author)
Book.objects.get(id=2).books.add(author)
Book.objects.get(id=3).books.add(author)
Book.objects.get(id=4).books.add(author)

Query: Assign the fourth author to the first 5 books (or in other words, all the books)	
author=Author.objects.get(id=4)
>>> for i in Book.objects.all():
...     i.books.add(author)

Query: Retrieve all the authors for the 3rd book
Book.objects.get(id=3).books.all()	

Query: Remove the first author of the 3rd book	
id=Book.objects.get(id=3).books.first().id
Author.objects.get(id=id).delete()

Query: Add the 5th author as one of the authors of the 2nd book	
author=Author.objects.get(id=5)
>>> Book.objects.get(id=2).books.add(author)

Query: Find all the books that the 3rd author is part of	
Author.objects.get(id=3).books.all()

Query: Find all the authors that contributed to the 5th book	
Book.objects.get(id=5).books.all()	

